#!/bin/sh

cat <<'EOF'
# stop and remove any previously running agent
docker stop docker-agent &>/dev/null
docker rm docker-agent &>/dev/null

# start the docker-agent
docker run \
       --name=docker-agent \
       --rm \
       -d \
       --init=true \
       -p 2202:22 \
       -v "docker-agent-tmp:/tmp" \
       -v "$HOME/.ssh/id_rsa.pub:/root/.ssh/authorized_keys" \
       -v "$HOME/.ssh/known_hosts:/root/.ssh/known_hosts" \
       dobbs/docker-agent \
       /usr/sbin/sshd -D

# reset keys in known_hosts
ssh-keygen -R '[localhost]:2202'
ssh-keyscan -p 2202 localhost >> ~/.ssh/known_hosts

# open the ssh auth socket inside our docker-agent
ssh -f -A -p 2202 root@localhost \
  'ln -fs $SSH_AUTH_SOCK /tmp/ssh-auth-sock; tail -f /dev/null'

set +x

STATUS=('')

# confirm sshd is running
if docker ps --filter=name=docker-agent | grep -q docker-agent; then
  STATUS=("${STATUS[@]}" 'docker-agent is running')
else
  STATUS=("${STATUS[@]}" 'docker-agent is NOT running')
fi

# confirm the tunnel is open
if ps -x | fgrep -q '$SSH_AUTH_SOCK /tmp/ssh-auth-sock;'; then
  STATUS=("${STATUS[@]}" 'ssh tunnel is running')
else
  STATUS=("${STATUS[@]}" 'ssh tunnel is NOT running')
fi

STATUS=(
  "${STATUS[@]}"
  'ls -al docker-agent-tmp'
  "$(docker run \
       --rm \
       -v "docker-agent-tmp:/tmp" \
       dobbs/docker-agent \
       ls -al /tmp
  )"
)

printf "%s\n" \
  '' \
  '========================' \
  'status' \
  '========================' \
  "${STATUS[@]}"

# now that you've looked at what this does, you can invoke it
# docker run --rm dobbs/docker-agent | bash -ux
EOF
